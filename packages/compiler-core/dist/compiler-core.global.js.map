{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from './ast'\r\n\r\nfunction createParseContext(template:string){\r\n    return {\r\n        line:1,\r\n        column:1,\r\n        offset:0,\r\n        source:template,// \u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u89E3\u6790\r\n        originalSource:template\r\n    }\r\n\r\n}\r\n\r\nfunction advancePositionWithMutation(\r\n    pos: any,\r\n    source: string,\r\n    numberOfCharacters: number = source.length\r\n  ):any {\r\n    let linesCount = 0\r\n    let lastNewLinePos = -1\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n      if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n        linesCount++\r\n        lastNewLinePos = i\r\n      }\r\n    }\r\n    pos.offset += numberOfCharacters\r\n    pos.line += linesCount\r\n    pos.column =\r\n      lastNewLinePos === -1          \r\n        ? pos.column + numberOfCharacters\r\n        : numberOfCharacters - lastNewLinePos\r\n\r\n\r\n    // debugger\r\n    return pos\r\n  }\r\n\r\n\r\n\r\nfunction getCursor(context:any){\r\n    let { line,column,offset } = context \r\n\r\n    return { line, column, offset}\r\n\r\n}\r\n\r\nfunction advanceBy(context:any,endIndex:number){\r\n    let source = context.source\r\n    // \u6BCF\u6B21\u5220\u6389\u5185\u5BB9\u7684\u65F6\u5019\u90FD\u8981\u5220\u6389\uFF0C\u66F4\u65B0\u6700\u65B0\u7684\u884C\u5217\u4FE1\u606F\uFF0C\u504F\u79FB\u91CF\u4FE1\u606F\r\n    advancePositionWithMutation(context,source,endIndex)\r\n\r\n    context.source = source.slice(endIndex)\r\n}\r\n\r\nfunction parseTextData(context:any,endIndex:number){\r\n    // debugger\r\n    const rawText = context.source.slice(0,endIndex)\r\n    advanceBy(context,endIndex)\r\n\r\n    return rawText\r\n}\r\n\r\nfunction getSelection(context:any,start:any, end?:any){\r\n    end = end || getCursor(context)\r\n// debugger\r\n    return {\r\n        start,\r\n        end,\r\n        source:context.originalSource.slice(start.offset, end.offset)\r\n    }\r\n\r\n}\r\n\r\nfunction parseInterpolation(context:any){ // \u5904\u7406\u8868\u8FBE\u5F0F\u7684\u4FE1\u606F\r\n    const start  =  getCursor(context)\r\n    const closeIndex = context.source.indexOf('}}','{{')//\u67E5\u627E\u7ED3\u675F\u7684\u5927\u62EC\u53F7\r\n\r\n    advanceBy(context,2)\r\n\r\n    const innerStart = getCursor(context)\r\n    const innerEnd = getCursor(context)\r\n\r\n    const rawContentLength = closeIndex - 2\r\n    let preContent = parseTextData(context,rawContentLength)\r\n    let content = preContent.trim()\r\n    let startOffset =  preContent.indexOf(content)\r\n\r\n    if(startOffset > 0){\r\n        advancePositionWithMutation(innerStart,preContent,startOffset)\r\n    }\r\n\r\n    let endOffset = startOffset + content.length\r\n    advancePositionWithMutation(innerEnd,preContent,endOffset)\r\n\r\n    advanceBy(context,2)\r\n\r\n    return {\r\n        type:NodeTypes.INTERPOLATION,\r\n        content:{\r\n            type: NodeTypes.SIMPLE_EXPRESSION,\r\n            content,\r\n            loc:getSelection(context,innerStart,innerEnd)\r\n        },\r\n        lpc:getSelection(context,start)\r\n    }\r\n\r\n}\r\nfunction advanceBySpaces(context:any){\r\n    let match =  /^[ \\t\\r\\n]+/.exec(context.source)\r\n    if(match){\r\n        advanceBy(context,match[0].length)\r\n    }\r\n}\r\nfunction parseAttributeValue(context:any){\r\n    const start = getCursor(context)\r\n    let quote =  context.source[0]\r\n    let content:any;\r\n    if(quote == '\"' || quote == \"'\"){\r\n        advanceBy(context,1)\r\n        const endIndex = context.source.indexOf(quote)\r\n        content = parseTextData(context,endIndex)\r\n        advanceBy(context,1)\r\n    }\r\n    return {\r\n        content,\r\n        loc:getSelection(context,start)\r\n    }\r\n}\r\n\r\nfunction parseAttribute(context:any){\r\n    const start = getCursor(context)\r\n\r\n    const match:any = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)\r\n    let name = match[0]\r\n    advanceBy(context,name.length)\r\n\r\n    advanceBySpaces(context)\r\n    advanceBy(context,1)\r\n    let value = parseAttributeValue(context)\r\n\r\n    const loc = getSelection(context,start)\r\n    return {\r\n        type:NodeTypes.ATTRIBUTE,\r\n        name,\r\n        value:{\r\n            type:NodeTypes.TEXT,\r\n            ...value\r\n        },\r\n        loc:getSelection(context,start)\r\n    }\r\n}\r\nfunction parseAttributes(context:any){\r\n    const props:Array<any> = []\r\n    while(context.source.length > 0 && !context.source.startsWith('>')){\r\n        const prop = parseAttribute(context)\r\n        props.push(prop)\r\n        advanceBySpaces(context)\r\n    }\r\n    return props\r\n}\r\n\r\nfunction parseTag(context:any){\r\n    const start = getCursor(context)\r\n    const match:any = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source)\r\n    const tag = match[1]\r\n    // debugger\r\n    advanceBy(context,match[0].length)\r\n    advanceBySpaces(context)\r\n\r\n    let props = parseAttributes(context)\r\n\r\n    let isSelfClosing = context.source.startsWith('/>')\r\n\r\n    advanceBy(context,isSelfClosing?2:1)\r\n    return {\r\n        type: NodeTypes.ELEMENT,\r\n        tag:tag,\r\n        isSelfClosing,\r\n        children:[],\r\n        props,\r\n        loc:getSelection(context,start)\r\n    }\r\n\r\n}\r\n\r\nfunction parseChildren(context:any){\r\n    const nodes:Array<any> = []\r\n    // debugger \r\n    while(isEndParse(context)){\r\n        const source = context.source\r\n        let node:any\r\n        \r\n        if(source.startsWith('{{')){\r\n            node = parseInterpolation(context)\r\n\r\n        }else if(source[0] === '<'){\r\n            node = parseElement(context)\r\n\r\n        }\r\n        if(!node){\r\n            node = parseText(context)\r\n            \r\n        }\r\n        nodes.push(node)\r\n    }\r\n    nodes.forEach((node,i)=>{\r\n        if(node.type === NodeTypes.TEXT){\r\n            if(!/[^\\t\\r\\n\\f ] /.test(node.content)){\r\n                nodes[i] = null\r\n            }\r\n        }\r\n    })\r\n\r\n    return nodes.filter(Boolean)\r\n}\r\n\r\nfunction parseElement(context:any){\r\n    let ele:any = parseTag(context)\r\n\r\n    // \u513F\u5B50\r\n\r\n    let children =  parseChildren(context)\r\n\r\n\r\n    if(context.source.startsWith('</')){\r\n        parseTag(context)\r\n    }\r\n    ele.loc = getSelection(context,ele.loc.start)\r\n    ele.children = children\r\n    return ele\r\n}\r\n\r\nfunction parseText(context:any){\r\n    // \u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019\u8981\u5224\u65AD\u5230\u54EA\u91CC\u7ED3\u675F\r\n    let endTokens = ['<','{{']\r\n\r\n    let endIndex = context.source.length // \u9ED8\u8BA4\u5230\u6700\u540E\u7ED3\u675F\r\n    // indexOf // \u7B2C\u4E8C\u4E2A\u53C2\u6570\u89C4\u5B9A\u5728\u5B57\u7B26\u4E32\u4E2D\u5F00\u59CB\u68C0\u7D22\u7684\u4F4D\u7F6E\u3002\u5B83\u7684\u5408\u6CD5\u53D6\u503C\u662F 0 \u5230 stringObject.length - 1\u3002\u5982\u7701\u7565\u8BE5\u53C2\u6570\uFF0C\u5219\u5C06\u4ECE\u5B57\u7B26\u4E32\u7684\u9996\u5B57\u7B26\u5F00\u59CB\u68C0\u7D22\u3002\r\n    for (let i = 0; i < endTokens.length; i++){\r\n        let index = context.source.indexOf(endTokens[i],1)\r\n        // \u627E\u5230\u4E86\u5E76\u4E14\u7B2C\u4E00\u6B21\u6BD4\u6574\u4E2A\u5B57\u7B26\u4E32\u5C0F\r\n        if(index !== -1 && endIndex > index){\r\n            endIndex = index\r\n        }\r\n    }\r\n    // \u521B\u5EFA \u884C\u5217\u4FE1\u606F\r\n    const start = getCursor(context)\r\n\r\n    const content = parseTextData(context,endIndex)\r\n\r\n    return {\r\n        type: NodeTypes.TEXT,\r\n        content:content,\r\n        loc:getSelection(context,start)\r\n    }\r\n}\r\n\r\nfunction isEndParse(context:any){\r\n    // debugger\r\n    // \u5982\u679C\u89E3\u6790\u5B8C\u6BD5\u540E\u4E3A\u7A7A\u5B57\u7B26\u4E32\u8BF4\u660E\u89E3\u6790\u5B8C\u6BD5\uFF0C\u7ED3\u675F\u9012\u5F52\r\n    const source = context.source\r\n    if(context.source.startsWith('</')){\r\n        return false;\r\n    }\r\n    return !!source\r\n}\r\nfunction parse(template:string){\r\n    const context = createParseContext(template)\r\n    // < \u5143\u7D20\r\n    // {{\u8868\u8FBE\u5F0F}}\r\n    // \u5176\u4ED6\u5C31\u662F\u6587\u672C\r\n    const start = getCursor(context)\r\n\r\n    return createRoot(parseChildren(context),getSelection(context,start))\r\n}\r\n\r\nfunction createRoot(children:any,loc:any){\r\n    return {\r\n        type:NodeTypes.ROOT,\r\n        children,\r\n        loc\r\n    }\r\n}\r\n\r\nexport function compile(template:string){\r\n    const ast = parse(template);\r\n\r\n    return ast;\r\n}"],
  "mappings": "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",
  "names": []
}
